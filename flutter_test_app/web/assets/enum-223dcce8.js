import{ad as o,j as e}from"./index-cba2b4c0.js";const a=o("enum",{state:()=>({enums:{},chainTypeList:[],chainList:[],decimalsList:[],coinTypeList:[],contractType:{},openStates:{},pricingCoinList:[],coinList:[]}),actions:{initEnum(){this.$patch({contractType:{1:"币种合约",2:"功能合约"},openStates:{0:"开启",1:"关闭"}})},async initBase(){const[i,s,n,t,r,c]=await Promise.all([e.postForm("/chain/type/list"),e.postForm("/chain/list"),e.get("/contract/decimals"),e.get("/coin/coin/type"),e.postForm("/symbol/pricing/currency"),e.post("/coin/list",{chainType:""})]);this.chainTypeList=i,this.chainList=s,this.decimalsList=n,this.coinTypeList=t,this.pricingCoinList=r,this.coinList=c},async getTradeCoins(i){return await e.get(`/symbol/trade/coins/${i}`)},filter(i){const s=this.$state;return typeof i=="string"&&(i=s==null?void 0:s[i]),n=>(n=n.map(t=>String(t)),Array.isArray(i)?i.filter(t=>n.includes(String(t.code??t.value??t.key))):Object.fromEntries(Object.entries(i).filter(t=>n.includes(String(t[0])))))},findName(i){const s=this.$state;return typeof i=="string"&&(i=s==null?void 0:s[i]),n=>{if(Array.isArray(i)){const t=i.find(r=>String(n)===String(r.code??r.value??r.key));return(t==null?void 0:t.desc)??(t==null?void 0:t.label)}return i[n]??n}}}});export{a as u};
