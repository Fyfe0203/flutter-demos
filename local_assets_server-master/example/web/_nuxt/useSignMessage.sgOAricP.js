import{u as c}from"./useMutation.aoGi9GE9.js";import{c5 as i,c6 as u,c7 as g,bG as f}from"./entry.nbMAVAIE.js";import{A as M,g as p,a as m}from"./getConnectorClient.p5LqdYNQ.js";async function y(t,{account:s=t.account,message:n}){if(!s)throw new M({docsPath:"/docs/actions/wallet/signMessage"});const o=g(s);if(o.type==="local")return o.signMessage({message:n});const e=typeof n=="string"?i(n):n.raw instanceof Uint8Array?u(n.raw):n.raw;return t.request({method:"personal_sign",params:[e,o.address]},{retryCount:0})}async function l(t,s){const{account:n,connector:o,...e}=s,a=await p(t,{account:n,connector:o});return m(a,y,"signMessage")(e)}function w(t){return{mutationFn(s){return l(t,s)},mutationKey:["signMessage"]}}function h(t={}){const{mutation:s}=t,n=f(t),o=w(n),{mutate:e,mutateAsync:a,...r}=c({...s,...o});return{...r,signMessage:e,signMessageAsync:a}}export{h as u};
