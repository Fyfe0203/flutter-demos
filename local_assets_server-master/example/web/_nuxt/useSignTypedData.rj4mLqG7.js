import{u as T}from"./useMutation.aoGi9GE9.js";import{c8 as h,c9 as E,ca as I,cb as w,cc as m,cd as v,ce as x,c7 as z,bG as A}from"./entry.nbMAVAIE.js";import{A as _,g as C,a as P}from"./getConnectorClient.p5LqdYNQ.js";class M extends h{constructor({expectedSize:e,givenSize:r}){super(`Expected bytes${e}, got bytes${r}.`),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"BytesSizeMismatchError"})}}const S=/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/,$=/^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;function B(t){const{domain:e,message:r,primaryType:n,types:s}=t,a=(c,y)=>{for(const u of c){const{name:g,type:i}=u,o=y[g],f=i.match($);if(f&&(typeof o=="number"||typeof o=="bigint")){const[b,p,l]=f;E(o,{signed:p==="int",size:parseInt(l)/8})}if(i==="address"&&typeof o=="string"&&!I(o))throw new w({address:o});const d=i.match(S);if(d){const[b,p]=d;if(p&&m(o)!==parseInt(p))throw new M({expectedSize:parseInt(p),givenSize:m(o)})}const D=s[i];D&&a(D,o)}};if(s.EIP712Domain&&e&&a(s.EIP712Domain,e),n!=="EIP712Domain"){const c=s[n];a(c,r)}}function F({domain:t}){return[typeof(t==null?void 0:t.name)=="string"&&{name:"name",type:"string"},(t==null?void 0:t.version)&&{name:"version",type:"string"},typeof(t==null?void 0:t.chainId)=="number"&&{name:"chainId",type:"uint256"},(t==null?void 0:t.verifyingContract)&&{name:"verifyingContract",type:"address"},(t==null?void 0:t.salt)&&{name:"salt",type:"bytes32"}].filter(Boolean)}async function O(t,e){const{account:r=t.account,domain:n,message:s,primaryType:a}=e;if(!r)throw new _({docsPath:"/docs/actions/wallet/signTypedData"});const c=z(r),y={EIP712Domain:F({domain:n}),...e.types};if(B({domain:n,message:s,primaryType:a,types:y}),c.type==="local")return c.signTypedData({domain:n,message:s,primaryType:a,types:y});const u=v({domain:n??{},message:s,primaryType:a,types:y},(g,i)=>x(i)?i.toLowerCase():i);return t.request({method:"eth_signTypedData_v4",params:[c.address,u]},{retryCount:0})}async function H(t,e){const{account:r,connector:n,...s}=e,a=await C(t,{account:r,connector:n});return P(a,O,"signTypedData")(s)}function R(t){return{mutationFn(e){return H(t,e)},mutationKey:["signTypedData"]}}function K(t={}){const{mutation:e}=t,r=A(t),n=R(r),{mutate:s,mutateAsync:a,...c}=T({...e,...n});return{...c,signTypedData:s,signTypedDataAsync:a}}export{K as u};
